def func1(arg1, arg2):
    def func2(arg3, arg4):
        var5 = (arg1 - (arg4 + arg3)) & arg4
        var6 = ((arg2 + arg2) ^ -974762652) ^ arg4
        if var5 < arg3:
            var7 = -350 - arg4
        else:
            var7 = (751280149 - (-1974047173 ^ -386150377)) ^ -1133076554
        var8 = arg3 + 65322461 ^ -499 + var5
        var9 = (arg3 + var5) | 682
        if arg1 < arg3:
            var10 = var6 & arg2 - var6 | var6
        else:
            var10 = var6 - arg1
        var11 = var6 | -685
        var12 = (var9 ^ var8 - var5) - arg3
        var13 = (var5 ^ var5) + var5 & var9
        var14 = arg2 + var8 & -1682247940 & arg2
        result = (arg1 - (var12 ^ var14)) + (var13 ^ var12 & (1708143728 + var11) | (var6 ^ (arg4 + var11 - var5))) + var11
        return result
    var15 = func2(arg2, arg1)
    var20 = func3(arg1, var15)
    var73 = func4(arg2, arg1)
    result = (-282404045 & (arg1 ^ 171) | arg1) ^ -315633099
    return result
def func4(arg21, arg22):
    var47 = var25(arg21, arg22)
    var54 = func8(arg22, arg21)
    if arg21 < arg21:
        var55 = var47 - ((var47 ^ var47) - arg22)
    else:
        var55 = (-1416866763 | arg22 ^ arg22) + arg21
    var56 = -713 | (var47 + (arg21 & var47))
    var57 = (356 | (arg22 ^ 537)) & var56
    var58 = (arg22 ^ -580 ^ var54) ^ var56
    var59 = var54 | var58
    var60 = ((var57 - 70) & -162672202) - var57
    var61 = (arg21 ^ arg21) ^ arg22 | arg22
    var62 = var54 ^ (arg22 | arg22) + var54
    var63 = var58 + (552287338 & var60)
    var64 = arg22 ^ (var54 & var57)
    var65 = arg21 - var59 ^ var57 ^ var61
    var66 = (var65 & 21) + (var61 - var54)
    var67 = var60 ^ var65 ^ var56
    var68 = (arg21 + (var58 + var63)) - 1326951531
    if var56 < arg21:
        var69 = var64 - var66 + var66 ^ var68
    else:
        var69 = var66 - var65
    var70 = var66 - var60
    var71 = var63 + var56 + var67
    var72 = var59 ^ (var68 - (var68 - var71))
    result = (var66 + var58) & var70
    return result
def func10(arg50, arg51):
    var52 = (arg51 | (706090131 + arg50) ^ (1035762632 + arg50) - arg50 | (arg51 - ((arg51 + -1474014860) ^ (arg51 & arg51 ^ 169 + arg51 - -1780700754 + (arg51 | 658) & -1038149719) ^ arg50 & -969 - arg50) | arg50)) - 987
    result = arg50 ^ 928457353 - 817446052
    return result
def func7(arg26, arg27):
    var28 = 205196698 | -886
    var29 = 631 & (546 - -502437662 - 715624950)
    var30 = arg27 | (arg26 | var29) - 562
    var31 = var28 ^ var29
    var32 = -1318099254 + var28 & var31 - var31
    var33 = ((var29 + var30) ^ 1851463251) - var31
    var34 = (var31 & var32 + var30) - -1753137460
    if var29 < var33:
        var35 = var32 - var34 + var32 & var32
    else:
        var35 = (-2076809346 & arg26) & (572286633 ^ var31)
    var36 = arg26 & var34 - (var31 - arg26)
    var37 = var29 & (653 | var29) - var31
    var38 = arg26 & 351241112
    var39 = (var34 ^ var31 ^ var36) - -918
    var40 = var33 + (var38 & (var39 ^ var30))
    var41 = var32 - var38 + var38 & var38
    var42 = var40 ^ (var40 - var34)
    if var36 < var37:
        var43 = var32 - arg26
    else:
        var43 = var29 - (var31 ^ var39)
    var44 = -1514693762 + var37
    var45 = arg26 & var29 - var44 & var29
    var46 = (var45 & var30) ^ var31 | arg27
    result = var42 ^ var33
    return result
def func6():
    closure = [-2]
    def func5(arg23, arg24):
        closure[0] += func7(arg23, arg24)
        return closure[0]
    func = func5
    return func
var25 = func6()
def func3(arg16, arg17):
    var18 = 0
    for var19 in range(29):
        var18 += arg17 - (var19 | var18)
    return var18
def func8(arg48, arg49):
    def func9(acc, rest):
        var53 = func10(rest, -8)
        if acc == 0:
            return var53
        else:
            result = func9(acc - 1, var53)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 74'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,d
